@startuml Flopp Core Classes

' Main interfaces
interface LineSegment {
  +long startIndex()
  +long endIndex()
  +MemorySegment memorySegment()
}

interface Range {
  +long startIndex()
  +long endIndex()
  +long length()
}

interface LineSegmentBuilder {
  +void accept(long data)
  +void accept(long data, int length)
  +void accept(LineSegment lineSegment)
}

interface LineSegmentTraverser {
  +Reusable apply(LineSegment)
}

interface MemorySegmentSource {
  +LineSegment get(Partition partition)
}

interface PartitionedSplitter {
  +Partition partition()
  +void forEach(Consumer<SeparatedLine>)
  +Stream<SeparatedLine> separatedLines()
}

' Key classes
class LineSegments {
  +{static} LineSegment of(String string)
  +{static} LineSegment of(byte[] bytes)
  +{static} LineSegment of(MemorySegment, long start, long end)
}

class MemorySegments {
  +{static} MemorySegment ofLength(long length, boolean direct)
  +{static} MemorySegment of(ByteBuffer byteBuffer)
  +{static} MemorySegment of(byte[] bytes)
}

class Partition {
  -int partitionNo
  -int partitionCount
  -long offset
  -long length
  +long startIndex()
  +long endIndex()
}

class Partitions {
  -long total
  -List<Partition> partitions
  -long tail
  +int size()
  +Partition get(int index)
}

class Shape {
  -long size
  -long longestLine
  -Charset charset
  -Decor decor
}

class TailShards {
  -int shardCount
  -int tailDim
  -int maxDim
  -int minDim
  +Partitions create(long total, int count, long tail)
}

' Relationships
Range <|-- LineSegment
Comparable <|-- LineSegment
LineSegment <|-- LineSegmentBuilder
LineSegment <|.. "implements" AbstractBitwiseLineSplitter
LineSegment <|.. "implements" BitwisePartitionLineFeeder

LineSegmentBuilder.App *-- LineSegment : contains

MemorySegmentSource <|.. "implements" AbstractFileChannelMemorySegmentSource

Partition ..|> Range : implements
Partition o-- Shape : uses

Partitions o-- "1..*" Partition : contains

TailShards ..> Partitions : creates

LineSegments ..> LineSegment : creates
MemorySegments ..> MemorySegment : creates

@enduml
